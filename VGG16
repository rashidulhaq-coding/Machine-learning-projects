{"cells":[{"source":"<a href=\"https://www.kaggle.com/code/rashidulhaqyousafzai/vgg16?scriptVersionId=192902324\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"code","execution_count":1,"id":"c688a268","metadata":{"_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","execution":{"iopub.execute_input":"2024-08-16T18:23:25.303984Z","iopub.status.busy":"2024-08-16T18:23:25.303692Z","iopub.status.idle":"2024-08-16T18:23:37.627751Z","shell.execute_reply":"2024-08-16T18:23:37.626977Z"},"papermill":{"duration":12.330543,"end_time":"2024-08-16T18:23:37.630108","exception":false,"start_time":"2024-08-16T18:23:25.299565","status":"completed"},"tags":[]},"outputs":[{"name":"stderr","output_type":"stream","text":["2024-08-16 18:23:27.801768: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n","2024-08-16 18:23:27.801867: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n","2024-08-16 18:23:27.936576: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n"]}],"source":["import numpy as np\n","import pandas as pd\n","import tensorflow as tf\n","from tensorflow.keras import layers\n","from tensorflow.keras import Model\n","\n","# import os\n","# for dirname, _, filenames in os.walk('/kaggle/input'):\n","#     for filename in filenames:\n","#         print(os.path.join(dirname, filename))"]},{"cell_type":"code","execution_count":2,"id":"083c7278","metadata":{"execution":{"iopub.execute_input":"2024-08-16T18:23:37.637745Z","iopub.status.busy":"2024-08-16T18:23:37.637244Z","iopub.status.idle":"2024-08-16T18:23:37.642519Z","shell.execute_reply":"2024-08-16T18:23:37.64161Z"},"papermill":{"duration":0.010904,"end_time":"2024-08-16T18:23:37.644375","exception":false,"start_time":"2024-08-16T18:23:37.633471","status":"completed"},"tags":[]},"outputs":[],"source":["def Vgg_Conv_block(no_of_layers,no_of_filters,x):\n","    \n","    for layer in range(no_of_layers):\n","        x = layers.Conv2D(no_of_filters,3,activation='relu')(x)\n","    x = layers.MaxPool2D(strides=2)(x)\n","    \n","    return x\n","    "]},{"cell_type":"code","execution_count":3,"id":"261ee12f","metadata":{"execution":{"iopub.execute_input":"2024-08-16T18:23:37.650873Z","iopub.status.busy":"2024-08-16T18:23:37.65063Z","iopub.status.idle":"2024-08-16T18:23:38.422278Z","shell.execute_reply":"2024-08-16T18:23:38.421476Z"},"papermill":{"duration":0.777265,"end_time":"2024-08-16T18:23:38.424446","exception":false,"start_time":"2024-08-16T18:23:37.647181","status":"completed"},"tags":[]},"outputs":[],"source":["model_input = layers.Input(shape=(224,224,3))\n","\n","x = Vgg_Conv_block(2,64,model_input)\n","x = Vgg_Conv_block(2,128,x)\n","x = Vgg_Conv_block(2,256,x)\n","x = Vgg_Conv_block(3,512,x)\n","x = Vgg_Conv_block(3,512,x)\n","x = layers.GlobalAveragePooling2D()(x)\n","x  = layers.Dense(4096,activation='relu')(x)\n","x  = layers.Dense(4096,activation='relu')(x)\n","\n","x  = layers.Dense(45,activation='softmax')(x)\n","\n","model = Model(model_input, x,name='VGG-16')"]},{"cell_type":"code","execution_count":4,"id":"eb1528db","metadata":{"execution":{"iopub.execute_input":"2024-08-16T18:23:38.431471Z","iopub.status.busy":"2024-08-16T18:23:38.431202Z","iopub.status.idle":"2024-08-16T18:23:38.437179Z","shell.execute_reply":"2024-08-16T18:23:38.436443Z"},"papermill":{"duration":0.011629,"end_time":"2024-08-16T18:23:38.439138","exception":false,"start_time":"2024-08-16T18:23:38.427509","status":"completed"},"tags":[]},"outputs":[],"source":["from tensorflow.keras.preprocessing.image import ImageDataGenerator\n","# Initialize the ImageDataGenerator with common augmentation techniques\n","datagen = ImageDataGenerator(\n","    rotation_range=20,  # Random rotation between 0 and 180 degrees\n","    width_shift_range=0.2,  # Random shift in width by up to 20%\n","    height_shift_range=0.2,  # Random shift in height by up to 20%\n","    shear_range=0.2,  # Shear transformation range\n","    zoom_range=0.2,  # Zoom range\n","    horizontal_flip=True,  # Flip horizontally with 50% probability\n","    vertical_flip=True,  # Flip vertically with 50% probability\n","    fill_mode='nearest', # Fill mode for filling holes left after transformations\n","    rescale=1./255, \n","    validation_split=0.2\n",")\n"]},{"cell_type":"code","execution_count":5,"id":"f5c2b117","metadata":{"execution":{"iopub.execute_input":"2024-08-16T18:23:38.445828Z","iopub.status.busy":"2024-08-16T18:23:38.445562Z","iopub.status.idle":"2024-08-16T18:23:39.056254Z","shell.execute_reply":"2024-08-16T18:23:39.055422Z"},"papermill":{"duration":0.616464,"end_time":"2024-08-16T18:23:39.058371","exception":false,"start_time":"2024-08-16T18:23:38.441907","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Found 11020 images belonging to 45 classes.\n","Found 2731 images belonging to 45 classes.\n"]}],"source":["directory = '/kaggle/input/mammals-image-classification-dataset-45-animals/mammals'\n","train_data = datagen.flow_from_directory(directory,\n","    target_size= (224, 224),\n","    color_mode='rgb',\n","    class_mode='categorical',\n","    batch_size=64,\n","    shuffle=True,\n","    subset=\"training\"\n","    )\n","\n","val_data = datagen.flow_from_directory(directory,\n","    target_size= (224, 224),\n","    color_mode='rgb',\n","    class_mode='categorical',\n","    batch_size=128,\n","    shuffle=True,\n","    subset=\"validation\"\n","    )"]},{"cell_type":"code","execution_count":6,"id":"5128bec8","metadata":{"execution":{"iopub.execute_input":"2024-08-16T18:23:39.065875Z","iopub.status.busy":"2024-08-16T18:23:39.065377Z","iopub.status.idle":"2024-08-16T18:23:39.079703Z","shell.execute_reply":"2024-08-16T18:23:39.07884Z"},"papermill":{"duration":0.020118,"end_time":"2024-08-16T18:23:39.081679","exception":false,"start_time":"2024-08-16T18:23:39.061561","status":"completed"},"tags":[]},"outputs":[],"source":["model.compile(optimizer='adam',loss='categorical_crossentropy',metrics=['accuracy',tf.keras.metrics.F1Score()])"]},{"cell_type":"code","execution_count":7,"id":"68a76711","metadata":{"execution":{"iopub.execute_input":"2024-08-16T18:23:39.088539Z","iopub.status.busy":"2024-08-16T18:23:39.088272Z","iopub.status.idle":"2024-08-16T18:32:48.037576Z","shell.execute_reply":"2024-08-16T18:32:48.03674Z"},"papermill":{"duration":548.98192,"end_time":"2024-08-16T18:32:48.066535","exception":false,"start_time":"2024-08-16T18:23:39.084615","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Epoch 1/2\n"]},{"name":"stderr","output_type":"stream","text":["/opt/conda/lib/python3.10/site-packages/keras/src/trainers/data_adapters/py_dataset_adapter.py:121: UserWarning: Your `PyDataset` class should call `super().__init__(**kwargs)` in its constructor. `**kwargs` can include `workers`, `use_multiprocessing`, `max_queue_size`. Do not pass these arguments to `fit()`, as they will be ignored.\n","  self._warn_if_super_not_called()\n","WARNING: All log messages before absl::InitializeLog() is called are written to STDERR\n","I0000 00:00:1723832694.698154      66 device_compiler.h:186] Compiled cluster using XLA!  This line is logged at most once for the lifetime of the process.\n","W0000 00:00:1723832694.725460      66 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"]},{"name":"stdout","output_type":"stream","text":["\u001b[1m173/173\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 939ms/step - accuracy: 0.0251 - f1_score: 0.0077 - loss: 3.8343"]},{"name":"stderr","output_type":"stream","text":["W0000 00:00:1723832909.492449      67 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"]},{"name":"stdout","output_type":"stream","text":["\u001b[1m173/173\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m337s\u001b[0m 2s/step - accuracy: 0.0251 - f1_score: 0.0077 - loss: 3.8344 - val_accuracy: 0.0242 - val_f1_score: 0.0011 - val_loss: 3.8296\n","Epoch 2/2\n"]},{"name":"stderr","output_type":"stream","text":["W0000 00:00:1723832958.204352      67 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"]},{"name":"stdout","output_type":"stream","text":["\u001b[1m173/173\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m210s\u001b[0m 901ms/step - accuracy: 0.0239 - f1_score: 0.0052 - loss: 3.8072 - val_accuracy: 0.0256 - val_f1_score: 0.0020 - val_loss: 3.8007\n"]},{"data":{"text/plain":["<keras.src.callbacks.history.History at 0x7cdcb043a230>"]},"execution_count":7,"metadata":{},"output_type":"execute_result"}],"source":["model.fit(train_data,validation_data=val_data,epochs=2)"]}],"metadata":{"kaggle":{"accelerator":"gpu","dataSources":[{"datasetId":3999173,"sourceId":6961629,"sourceType":"datasetVersion"}],"dockerImageVersionId":30747,"isGpuEnabled":true,"isInternetEnabled":true,"language":"python","sourceType":"notebook"},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.10.13"},"papermill":{"default_parameters":{},"duration":568.38241,"end_time":"2024-08-16T18:32:50.968438","environment_variables":{},"exception":null,"input_path":"__notebook__.ipynb","output_path":"__notebook__.ipynb","parameters":{},"start_time":"2024-08-16T18:23:22.586028","version":"2.5.0"}},"nbformat":4,"nbformat_minor":5}